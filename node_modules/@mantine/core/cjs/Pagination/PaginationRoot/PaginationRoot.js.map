{"version":3,"file":"PaginationRoot.js","sources":["../../../src/Pagination/PaginationRoot/PaginationRoot.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport {\n  MantineColor,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  ClassNames,\n  Styles,\n} from '@mantine/styles';\nimport { usePagination } from '@mantine/hooks';\nimport { createEventHandler } from '@mantine/utils';\nimport { PaginationProvider } from '../Pagination.context';\nimport type { PaginationControlStylesNames } from '../PaginationControl/PaginationControl';\nimport type { PaginationDotsStylesNames } from '../PaginationDots/PaginationDots';\n\nexport type PaginationStylesNames = PaginationControlStylesNames | PaginationDotsStylesNames;\n\nexport interface PaginationRootSettings {\n  classNames?: ClassNames<PaginationStylesNames>;\n  styles?: Styles<PaginationStylesNames>;\n  unstyled?: boolean;\n  variant?: string;\n\n  /** Controls height and min-width */\n  size?: MantineNumberSize;\n\n  /** Total number of pages, must be an integer */\n  total: number;\n\n  /** Active page for controlled component, must be an integer in [0, total] interval */\n  value?: number;\n\n  /** Active page for uncontrolled component, must be an integer in [0, total] interval */\n  defaultValue?: number;\n\n  /** Called when page changes */\n  onChange?(value: number): void;\n\n  /** Determines whether all controls should be disabled, false by default */\n  disabled?: boolean;\n\n  /** Number of siblings displayed on the left/right side of selected page, 1 by default */\n  siblings?: number;\n\n  /** Number of elements visible on the left/right edges, 1 by default */\n  boundaries?: number;\n\n  /** Key of theme.colors, active item color, theme.primaryColor by default */\n  color?: MantineColor;\n\n  /** Key of theme.radius, border-radius of items and controls, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Called when next page control is clicked */\n  onNextPage?(): void;\n\n  /** Called when previous page control is clicked */\n  onPreviousPage?(): void;\n\n  /** Called when first page control is clicked */\n  onFirstPage?(): void;\n\n  /** Called when last page control is clicked */\n  onLastPage?(): void;\n\n  /** Add additional props to items */\n  getItemProps?(page: number): Record<string, any>;\n}\n\nexport interface PaginationRootProps extends PaginationRootSettings {\n  /** Pagination content */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<PaginationRootProps> = {\n  siblings: 1,\n  boundaries: 1,\n};\n\nexport function PaginationRoot(props: PaginationRootProps) {\n  const {\n    total,\n    value,\n    defaultValue,\n    onChange,\n    disabled,\n    children,\n    siblings,\n    boundaries,\n    color,\n    radius,\n    onNextPage,\n    onPreviousPage,\n    onFirstPage,\n    onLastPage,\n    getItemProps,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size,\n  } = useComponentDefaultProps('PaginationRoot', defaultProps, props);\n\n  const { range, setPage, next, previous, active, first, last } = usePagination({\n    page: value,\n    initialPage: defaultValue,\n    onChange,\n    total,\n    siblings,\n    boundaries,\n  });\n\n  const handleNextPage = createEventHandler(onNextPage, next);\n  const handlePreviousPage = createEventHandler(onPreviousPage, previous);\n  const handleFirstPage = createEventHandler(onFirstPage, first);\n  const handleLastPage = createEventHandler(onLastPage, last);\n\n  return (\n    <PaginationProvider\n      value={{\n        total,\n        range,\n        active,\n        disabled,\n        color,\n        radius,\n        getItemProps,\n        onChange: setPage,\n        onNext: handleNextPage,\n        onPrevious: handlePreviousPage,\n        onFirst: handleFirstPage,\n        onLast: handleLastPage,\n        stylesApi: {\n          name: 'Pagination',\n          classNames,\n          styles,\n          unstyled,\n          variant,\n          size,\n        },\n      }}\n    >\n      {children}\n    </PaginationProvider>\n  );\n}\n"],"names":["styles","useComponentDefaultProps","usePagination","createEventHandler","React","PaginationProvider"],"mappings":";;;;;;;;;;;;;;AAOA,MAAM,YAAY,GAAG;AACrB,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,UAAU,EAAE,CAAC;AACf,CAAC,CAAC;AACK,SAAS,cAAc,CAAC,KAAK,EAAE;AACtC,EAAE,MAAM;AACR,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,YAAY;AAChB,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,cAAc;AAClB,IAAI,WAAW;AACf,IAAI,UAAU;AACd,IAAI,YAAY;AAChB,IAAI,UAAU;AACd,YAAIA,QAAM;AACV,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,IAAI;AACR,GAAG,GAAGC,+BAAwB,CAAC,gBAAgB,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AACtE,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAGC,mBAAa,CAAC;AAChF,IAAI,IAAI,EAAE,KAAK;AACf,IAAI,WAAW,EAAE,YAAY;AAC7B,IAAI,QAAQ;AACZ,IAAI,KAAK;AACT,IAAI,QAAQ;AACZ,IAAI,UAAU;AACd,GAAG,CAAC,CAAC;AACL,EAAE,MAAM,cAAc,GAAGC,wBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC9D,EAAE,MAAM,kBAAkB,GAAGA,wBAAkB,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;AAC1E,EAAE,MAAM,eAAe,GAAGA,wBAAkB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AACjE,EAAE,MAAM,cAAc,GAAGA,wBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC9D,EAAE,uBAAuBC,cAAK,CAAC,aAAa,CAACC,qCAAkB,EAAE;AACjE,IAAI,KAAK,EAAE;AACX,MAAM,KAAK;AACX,MAAM,KAAK;AACX,MAAM,MAAM;AACZ,MAAM,QAAQ;AACd,MAAM,KAAK;AACX,MAAM,MAAM;AACZ,MAAM,YAAY;AAClB,MAAM,QAAQ,EAAE,OAAO;AACvB,MAAM,MAAM,EAAE,cAAc;AAC5B,MAAM,UAAU,EAAE,kBAAkB;AACpC,MAAM,OAAO,EAAE,eAAe;AAC9B,MAAM,MAAM,EAAE,cAAc;AAC5B,MAAM,SAAS,EAAE;AACjB,QAAQ,IAAI,EAAE,YAAY;AAC1B,QAAQ,UAAU;AAClB,gBAAQL,QAAM;AACd,QAAQ,QAAQ;AAChB,QAAQ,OAAO;AACf,QAAQ,IAAI;AACZ,OAAO;AACP,KAAK;AACL,GAAG,EAAE,QAAQ,CAAC,CAAC;AACf;;;;"}